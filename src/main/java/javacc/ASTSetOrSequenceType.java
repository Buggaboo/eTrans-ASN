/* Generated By:JJTree: Do not edit this line. ASTSetOrSequenceType.java Version 6.0 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=true,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package javacc;

import java.io.IOException;
import java.io.OutputStream;
import java.util.Vector;

public class ASTSetOrSequenceType extends SimpleNode {
	public static final int SEQUENCE = 0;
	public static final int SET = 1;
	protected int type;

	protected void
	setType(int seq)
	{
		type = seq;
	}

	protected boolean
	isSequence()
	{
		if(type == SEQUENCE)
			return true;

		return false;
	}

	protected boolean
	isSet()
	{
		if(type == SEQUENCE)
			return false;

		return true;
	}

	public String
	toString()
	{
		if(type == SEQUENCE)
			return "SEQUENCE";

		return "SET";
	}

    @Override
    protected boolean generateClassDirectiveText( OutputStream outputStream, String directiveName, StringBuffer line) throws IOException {
        boolean returnValue = false;
        if(directiveName.equals("accessor"))	// insert a list tagging setup statements
        {
            //accessor methods are removed by Fatih Batuk
					/*  String[] methods = createAccessors();
						for(int i = 0; i < methods.length; i++)
						{
							os.write(methods[i].getBytes());
							os.write(0x0a);
							os.flush();
						}
			        */
            //	line = "\t/* end of accessor methods */";
            line.setLength(0);
            returnValue = true;
        }
        return returnValue;
    }

    @Override
    protected String getInnerClassTemplateName() {
        // TODO - Many not always be sequence, could be set I believe
        // TBD may not be right
        return "sequenceelement";
    }

    /**
     * Creates the source file for the named class, extending either the Set
     * or Sequence class.
     *<p>
     * This method must read through the elements of the set or sequence and
     * create attributes in the class being generated for each. It must also
     * create a setUpElements method that sets all the tagging information.
     *
     */
	public void
	generateClass(String name)
	{
        String templateName;
        if(isSet() == true)
        {
            templateName = "set";
        }
        else
        {
            templateName = "sequence";
        }
        generateClass( name, templateName );
	}

	private String[]
	createAccessors()
	{
		String eName;
		String eType;

		Vector decs = new Vector();

		int numChildren = jjtGetNumChildren();
		for(int i = 0; i < numChildren; i++)
		{
			Node n = jjtGetChild(i);
			if(n instanceof ASTElementType)
			{
				ASTElementType et = (ASTElementType)n;
				eName = et.getName();
				eName = eName.replace('-', '_');
				eType = et.getClassName();
				eType = eType.replace('-', '_');

				String dec = new String("\tpublic " + eType + "\n\tget" + eName + "()\n\t{\n\t\treturn " + eName + ";\n\t}\n");
				decs.addElement(dec);
				dec = new String("\tpublic void\n\tset" + eName + "(" + eType + " value)\n\t{\n\t\t" + eName + " = value;\n\t}\n");
				decs.addElement(dec);
			}
		}

		if(decs.size() > 0)
		{
			String[] rc = new String[decs.size()];
			decs.toArray(rc);
			return rc;
		}

		return null;
	}

  public ASTSetOrSequenceType(int id) {
    super(id);
  }

  public ASTSetOrSequenceType(AsnParser p, int id) {
    super(p, id);
  }


  /** Accept the visitor. **/
  public Object jjtAccept(AsnParserVisitor visitor, Object data) {

    return
    visitor.visit(this, data);
  }
}
/* JavaCC - OriginalChecksum=80caa23964dd546fceb13d2159471c96 (do not edit this line) */
